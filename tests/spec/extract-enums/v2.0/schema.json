{
  "swagger": "2.0",
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [],
  "schemes": ["http"],
  "paths": {
    "/api/v1/super-duper": {
      "post": {
        "tags": [""],
        "summary": "",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NEW",
                    "PENDING"
                  ],
                  "example": "APPROVED"
                }
              }
            }
          },
          "404": { "description": "" }
        },
        "operationId": "NameSpace_AddSuperDuper"
      }
    },
    "/orgs/{org}/issues": {
      "get": {
        "description": "List issues.\nList all issues for a given organization for the authenticated user.\n",
        "parameters": [
          {
            "default": "all",
            "description": "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n",
            "enum": ["assigned", "created", "mentioned", "subscribed", "all"],
            "in": "query",
            "name": "filter",
            "required": true,
            "type": "string"
          },
          {
            "default": "open",
            "enum": ["open", "closed"],
            "in": "query",
            "name": "state",
            "required": true,
            "type": "string"
          },
          {
            "default": "created",
            "enum": ["created", "updated", "comments"],
            "in": "query",
            "name": "sort",
            "required": true,
            "type": "string"
          },
          {
            "default": "desc",
            "enum": ["asc", "desc"],
            "in": "query",
            "name": "direction",
            "required": true,
            "type": "string"
          },
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-GitHub-Media-Type": {
                "description": "You can check the current version of media type in responses.\n",
                "type": "string"
              },
              "X-GitHub-Request-Id": {
                "type": "integer"
              },
              "X-RateLimit-Limit": {
                "type": "integer"
              },
              "X-RateLimit-Remaining": {
                "type": "integer"
              },
              "X-RateLimit-Reset": {
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/issues"
            }
          },
          "403": {
            "description": "API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting\nfor details.\n",
            "headers": {
              "X-GitHub-Media-Type": {
                "description": "You can check the current version of media type in responses.\n",
                "type": "string"
              },
              "X-GitHub-Request-Id": {
                "type": "integer"
              },
              "X-RateLimit-Limit": {
                "type": "integer"
              },
              "X-RateLimit-Remaining": {
                "type": "integer"
              },
              "X-RateLimit-Reset": {
                "type": "integer"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "enum-root": {
      "enum": ["100644", "100755", "040000", "160000", "120000", "test1", "test2"],
      "type": "string"
    },
    "tree": {
      "properties": {
        "tree": {
          "items": {
            "properties": {
              "mode": {
                "enum": ["100644", "100755", "040000", "160000", "120000"],
                "type": "string"
              },
              "mode-num": {
                "enum": [100644, 100755, 40000, 160000, 120000],
                "type": "number"
              },
              "type": {
                "enum": ["blob", "tree", "commit"],
                "type": "string"
              },
              "bereke": {
                "x-enumNames": ["Bla", "Blabla", "Boiler"]
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OnlyEnumNames": {
      "x-enumNames": ["Bla", "Blabla", "Boiler"]
    },
    "StringOnlyEnumNames": {
      "type": "int32",
      "x-enumNames": ["Bla", "Blabla", "Boiler"]
    },
    "StringEnums": {
      "type": "int32",
      "enum": ["foo", "bar"],
      "x-enumNames": ["Bla", "Blabla", "Boiler"]
    },
    "StringCompleteEnums": {
      "type": "int32",
      "enum": ["foo", "bar", "baz"],
      "x-enumNames": ["Bla", "Blabla", "Boiler"]
    },
    "EmptyEnum": {
      "format": "int32",
      "type": "integer",
      "x-enumNames": ["Bla", "Blabla", "Boiler"]
    },
    "EnumWithMoreNames": {
      "format": "int32",
      "type": "integer",
      "enum": [1],
      "x-enumNames": ["Bla", "Blabla", "Boiler"]
    },
    "SomeInterestEnum": {
      "format": "int32",
      "enum": [6, 2, 1, 67, 88, 122, 88, 0, 213, 12378, 123125, 32452, 1111, 66666],
      "type": "integer",
      "x-enumNames": [
        "Bla",
        "Blabla",
        "Boiler",
        "Bbabab",
        "Nowadays",
        "FAIL",
        "Vvvvv",
        "ASdasAS",
        "ASDsacZX",
        "Zook",
        "EnumMm",
        "VCsa",
        "Yuuu",
        "ASddd",
        "ASdsdsa",
        "ASDds",
        "HSDFDS"
      ]
    },
    "SuperDuperStructDTO": {
      "properties": {
        "id": { "type": "number", "example": "100" },
        "state": {
          "type": "string",
          "enum": [
            "NEW",
            "PENDING"
          ],
          "example": "APPROVED"
        }
      },
      "type": "object",
      "required": [
        "id",
        "state"
      ]
    },
    "nullableEnum": {
      "type": "number",
      "enum": [null],
      "nullable": true
    },
    "code-scanning-alert-dismissed-reason": {
      "type": "string",
      "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
      "nullable": true,
      "oneOf": [
        {
          "enum": ["false positive", "won't fix", "used in tests"]
        },
        {
          "enum": [null]
        }
      ]
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
